"""
1. Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа данных каждого
 элемента. Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у пользователя, а
 указать явно, в программе.
"""
# my_list = ['a', 1, False]
# for i in my_list:
#     print(i, type(i))

"""
2. Для списка реализовать обмен значений соседних элементов, т.е. Значениями обмениваются элементы с 
индексами 0 и 1, 2 и 3 и т.д. При нечетном количестве элементов последний сохранить на своем месте. Для заполнения
 списка элементов необходимо использовать функцию input().
"""
# my_list = []
# for i in range(1, 6):
#     value = input(f'Введите значение элемента {i} для заполнения списка: ')
#     my_list.append(value)
# print(my_list)
#
# for j in range(0, len(my_list)-1, 2):
#     my_list[j], my_list[j+1] = my_list[j+1], my_list[j]
# print(my_list)

"""
3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить к какому времени года относится месяц 
(зима, весна, лето, осень). Напишите решения через list и через dict.
"""
# # Решение через list
# value = int(input('Ведите значениме месяца в виде целого числа от 1 до 12: '))
# months = ['зима', 'весна', 'лето', 'осень']
# temp = None
#
# if value in range(3, 6):
#     temp = "Весна"
# elif value in range(6, 9):
#     temp = "Лето"
# elif value in range(9, 12):
#     temp = "Осень"
# else:
#     temp = "Зима"
# print('Время года ', temp)

# # Решение через dict
# value = input('Ведите значениме месяца в виде целого числа от 1 до 12: ')
# months = {'1': 'зима', '2': 'зима', '3': 'весна', '4': 'весна', '5': 'весна', '6': 'лето', '7': 'лето',
#           '8': 'лето', '9': 'осень', '10': 'осень', '11': 'осень', '12': 'зима'}
# print(f'Время года {months[value]}')

"""
4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки.
 Строки необходимо пронумеровать. Если в слово длинное, выводить только первые 10 букв в слове.
"""
# value = input('Введите строку из нескольких слов, разделённых пробелами : ')
# value = value.split(' ')
#
# count = 1
# for i in value:
#     if len(i) <=10:
#         print(f'Строка номер {count} : {i}')
#     else:
#         print(f'Строка номер {count} : {i[:10]}')
#     count += 1

"""
5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел. У пользователя
 необходимо запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми значениями,
  то новый элемент с тем же значением должен разместиться после них.

Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].
"""
# my_list = [7, 5, 3, 3, 2]
# value = int(input('Введите новый элемент рейтинга: '))
#
# count = my_list.count(value)
# for element in my_list:
#     if count > 0:
#         i = my_list.index(value)
#         my_list.insert(i+count, value)
#         break
#     else:
#         if value > element:
#             j = my_list.index(element)
#             my_list.insert(j, value)
#             break
#         elif value < my_list[len(my_list) - 1]:
#             my_list.append(value)
#
# print(my_list)